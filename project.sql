-- TEMPERATURE TABLE
CREATE TABLE TEMPERATURES(
    -- ID_TEMP INT AUTO_INCREMENT PRIMARY KEY,
    DATE_TEMP DATE,
    DEP_ID VARCHAR(3),
    DEPARTMENT VARCHAR(50),
    MIN_TEMP DECIMAL(10, 2),
    MAX_TEMP DECIMAL(10, 2),
    MEAN_TEMP DECIMAL(10, 2),

    PRIMARY KEY (DATE_TEMP, DEP_ID),
    FOREIGN KEY (DEP_ID) REFERENCES PROJET_DEP(codeD)
);

-- ALTER TABLE TEMPERATURES ADD COLUMN ID_TEMP INT AUTO_INCREMENT PRIMARY KEY;
-- ALTER TABLE TEMPERATURES DROP COLUMN ID_TEMP;
ALTER TABLE TEMPERATURES ADD CONSTRAINT PRIMARY KEY (DATE_TEMP, DEP_ID);
ALTER TABLE TEMPERATURES ADD CONSTRAINT temp_depID_fk FOREIGN KEY (DEP_ID) REFERENCES PROJET_DEP(codeD);

--DELETING DATA BEYOND 2021
DELETE
FROM TEMPERATURES
WHERE DATE_TEMP LIKE "2022-%" OR DATE_TEMP LIKE "2023-%" OR DATE_TEMP LIKE "2024-%";

--DATA REPEATS 96 times PER DAY -> TEMP OF ALL DEPARTMENTS EVERY DAY
SELECT COUNT(DATE_TEMP), DATE_TEMP
FROM TEMPERATURES
WHERE DATE_HOSP = '2021-12-31'
GROUP BY DATE_TEMP;

--CLEANED DATA -> REMOVED 0 from DEP_ID TO ALLOW JOIN eg. '07' BECOMES '7'
UPDATE TEMPERATURES
SET DEP_ID = SUBSTRING(DEP_ID, 2)
WHERE DEP_ID LIKE '0%';



------------------------------------------------------------------------------------------------------------




-- HOSPITALISATION TABLE
CREATE TABLE HOSPITALISATIONS(
    -- ID_HOSP INT AUTO_INCREMENT PRIMARY KEY,
    DEP_ID VARCHAR(3),
    SEX INT,
    DATE_HOSP DATE,
    NUM_HOSP INT,
    NUM_INTENSE_CARE INT,
    NUM_CONV_HOSP INT,
    NUM_SSR_USLD INT,
    NUM_OTHERS INT,
    NUM_RETURN_HOME INT,
    NUM_DEATHS INT,

    PRIMARY KEY (DEP_ID, DATE_HOSP, SEX),
    FOREIGN KEY (DEP_ID) REFERENCES PROJET_DEP (codeD)
);

-- ALTER TABLE HOSPITALISATIONS DROP COLUMN ID_HOP;
-- ALTER TABLE HOSPITALISATIONS ADD COLUMN ID_HOP INT AUTO_INCREMENT PRIMARY KEY;
-- ALTER TABLE HOSPITALISATIONS DROP CONSTRAINT PRIMARY KEY;
ALTER TABLE HOSPITALISATIONS ADD CONSTRAINT PRIMARY KEY (DEP_ID, DATE_HOSP, SEX);
ALTER TABLE HOSPITALISATIONS ADD CONSTRAINT hosp_depID_fk FOREIGN KEY (DEP_ID) REFERENCES PROJET_DEP (codeD);

SELECT DATE_HOSP, DEP_ID, NUM_HOSP
FROM HOSPITALISATIONS
WHERE DATE_HOSP LIKE "2019-%" OR DATE_HOSP LIKE "2020-%"
ORDER BY DATE_HOSP ASC;

--DELETING DATA BEYOND 2021
DELETE
FROM HOSPITALISATIONS
WHERE DATE_HOSP LIKE "2022-%" OR DATE_HOSP LIKE "2023-%";

--CLEANED DATA -> REMOVED 0 from DEP_ID TO ALLOW JOIN eg '02' BECOMES '2'
UPDATE HOSPITALISATIONS
SET DEP_ID = SUBSTRING(DEP_ID, 2)
WHERE DEP_ID LIKE '0%'

--DATE_HOSP DOES NOT REPEEAT -> POSSIBLE PRIMARY KEY/ FOREIGN KEY | FALSE
--DATA REPEATS 305 times PER DAY -> THREE TUPLES PER DEPARTMENT EVERYDAY
--SEX(0) -> MEN + WOMEN
--SEX(1) -> MEN
--SEX(2) -> WOMEN
SELECT COUNT(DATE_HOSP), DATE_HOSP, SEX
FROM HOSPITALISATIONS
WHERE DATE_HOSP = '2021-12-31'
GROUP BY DATE_HOSP;


--TODO -> CREATE VIEWS FOR EVERYDAY, FOR EVERY SEX, PRIMARY KEY - DATES

--LINK BETWEEN HOSP; TEMP AND POPU TABLES
SELECT DATE_HOSP, H.DEP_ID, T.DEP_ID, T.MEAN_TEMP, NUM_HOSP, total, SEX
FROM TEMPERATURES T
RIGHT JOIN HOSPITALISATIONS H
ON H.DEP_ID = T.DEP_ID AND H.DATE_HOSP = T.DATE_TEMP
LEFT JOIN PROJET_POPU P
ON H.DEP_ID = P.codeD
ORDER BY DATE_HOSP, H.DEP_ID LIMIT 1000;

--FINDING OUT THE MISSING DEPARTMENTS IN THE PROJET_DEP TABLE
SELECT DISTINCT H.DEP_ID, P.nomD
FROM HOSPITALISATIONS H
LEFT JOIN PROJET_DEP P
ON H.DEP_ID = P.codeD;



--- TEMPERATURES TABLES IS MISSING D.O.Ms (Departements Outre Mer)