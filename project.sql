-- TEMPERATURE TABLE
CREATE TABLE TEMPERATURES(
    -- ID_TEMP INT AUTO_INCREMENT PRIMARY KEY,
    DATE_TEMP DATE,
    DEP_ID VARCHAR(3),
    DEPARTMENT VARCHAR(50),
    MIN_TEMP DECIMAL(10, 2),
    MAX_TEMP DECIMAL(10, 2),
    MEAN_TEMP DECIMAL(10, 2),

    PRIMARY KEY (DATE_TEMP, DEP_ID),
    -- FOREIGN KEY (DEP_ID) REFERENCES PROJET_DEP(codeD)
);

ALTER TABLE TEMPERATURES ADD CONSTRAINT temp_depID_fk FOREIGN KEY (DEP_ID) REFERENCES PROJET_DEP(codeD);

--DELETING DATA BEYOND 2021
DELETE
FROM TEMPERATURES
WHERE DATE_TEMP LIKE "2022-%" OR DATE_TEMP LIKE "2023-%" OR DATE_TEMP LIKE "2024-%";


--CLEANED DATA -> REMOVED 0 from DEP_ID TO ALLOW JOIN eg. '07' BECOMES '7'
UPDATE TEMPERATURES
SET DEP_ID = SUBSTRING(DEP_ID, 2)
WHERE DEP_ID LIKE '0%';



------------------------------------------------------------------------------------------------------------



-- HOSPITALISATION TABLE
CREATE TABLE HOSPITALISATIONS(
    -- ID_HOSP INT AUTO_INCREMENT PRIMARY KEY,
    DEP_ID VARCHAR(3),
    SEX INT,
    DATE_HOSP DATE,
    NUM_HOSP INT,
    NUM_INTENSE_CARE INT,
    NUM_CONV_HOSP INT,
    NUM_SSR_USLD INT,
    NUM_OTHERS INT,
    NUM_RETURN_HOME INT,
    NUM_DEATHS INT,

    PRIMARY KEY (DEP_ID, DATE_HOSP, SEX),
    -- FOREIGN KEY (DEP_ID) REFERENCES PROJET_DEP (codeD)
);

ALTER TABLE HOSPITALISATIONS ADD CONSTRAINT hosp_depID_fk FOREIGN KEY (DEP_ID) REFERENCES PROJET_DEP (codeD);

SELECT DATE_HOSP, DEP_ID, NUM_HOSP
FROM HOSPITALISATIONS
WHERE DATE_HOSP LIKE "2019-%" OR DATE_HOSP LIKE "2020-%"
ORDER BY DATE_HOSP ASC;

--DELETING DATA BEYOND 2021
DELETE
FROM HOSPITALISATIONS
WHERE DATE_HOSP LIKE "2022-%" OR DATE_HOSP LIKE "2023-%";

--CLEANED DATA -> REMOVED 0 from DEP_ID TO ALLOW JOIN eg '02' BECOMES '2'
UPDATE HOSPITALISATIONS
SET DEP_ID = SUBSTRING(DEP_ID, 2)
WHERE DEP_ID LIKE '0%'



------------------------------------------------------------------
-- ANALYSIS
-- SUM OF HOSPITALISATIONS IN FRANCE FOR EACH DAY
SELECT SUM(NUM_HOSP), DATE_HOSP
FROM HOSPITALISATIONS H
INNER JOIN PROJET_DEP D
ON H.DEP_ID = D.codeD
GROUP BY DATE_HOSP
ORDER BY DATE_HOSP ASC

-- SUM OF HOSPITALISATIONS IN FRANCE FOR EACH YEAR
SELECT SUM(NUM_HOSP), YEAR(DATE_HOSP)
FROM HOSPITALISATIONS
INNER JOIN PROJET_DEP D
ON H.DEP_ID = D.codeD
GROUP BY YEAR(DATE_HOSP)
ORDER BY YEAR(DATE_HOSP) ASC

--DEP With the Most Hospitalisations
SELECT AVG(NUM_HOSP) AS AVG_NUM_HOSP, DEP_ID, nomD
FROM HOSPITALISATIONS H
INNER JOIN PROJET_DEP D
ON H.DEP_ID = D.codeD
GROUP BY DEP_ID
ORDER BY AVG_NUM_HOSP DESC

--HOSPITALISATION RATE PER SEASON
SELECT 
    AVG((NUM_HOSP/total) * 10000) AS HOSP_RATE,
    CASE
        WHEN MONTH(DATE_HOSP) IN (12, 1, 2) THEN 'Winter'
        WHEN MONTH(DATE_HOSP) IN (3, 4, 5) THEN 'Spring'
        WHEN MONTH(DATE_HOSP) IN (6, 7, 8) THEN 'Summer'
        WHEN MONTH(DATE_HOSP) IN (9, 10, 11) THEN 'Autumn'
    END AS 'SEASONS'
FROM HOSPITALISATIONS H
INNER JOIN PROJET_POPU P
ON H.DEP_ID = P.codeD
GROUP BY SEASONS
ORDER BY HOSP_RATE DESC

--NORTH RECORDS MORE HOSPITALISATIONS THAN THE SOUTH?
SELECT AVG(H.NUM_HOSP) AS AVG_NUM_HOSP,
       CASE 
           WHEN H.DEP_ID IN ('59', '62', '80', '60', '02', '76', '14', '50', '27', '77', '95') THEN 'North'
           WHEN H.DEP_ID IN ('13', '83', '84', '06', '31', '33', '66', '34', '11', '30', '24') THEN 'South'
           ELSE 'D.O.M'
       END AS 'REGIONS'
FROM HOSPITALISATIONS H
INNER JOIN PROJET_DEP D ON H.DEP_ID = D.codeD
GROUP BY REGIONS
ORDER BY AVG_NUM_HOSP DESC;
----------------------------------------------------------------------

-- SUM OF TEMPERATURES IN FRANCE FOR EACH DAY
SELECT SUM(MIN_TEMP), SUM(MAX_TEMP), SUM(MEAN_TEMP), DATE_TEMP
FROM TEMPERATURES T
INNER JOIN PROJET_DEP D
ON T.DEP_ID = D.codeD
GROUP BY DATE_TEMP
ORDER BY DATE_TEMP ASC

--LEAST TEMP, HIGHEST TEMP, AVG TEMP IN FRANCE FOR EACH YDAY
SELECT MIN(MIN_TEMP) AS 'LOWEST_TEMP', MAX(MAX_TEMP) AS 'HIGHEST_TEMP', AVG(MEAN_TEMP), DATE_TEMP
FROM TEMPERATURES T
INNER JOIN PROJET_DEP D
ON T.DEP_ID = D.codeD
GROUP BY DATE_TEMP
ORDER BY DATE_TEMP ASC


-- SUM OF TEMPERATURES IN FRANCE FOR EACH YEAR
SELECT SUM(MIN_TEMP), SUM(MAX_TEMP), SUM(MEAN_TEMP), YEAR(DATE_TEMP)
FROM TEMPERATURES
INNER JOIN PROJET_DEP D
ON T.DEP_ID = D.codeD
GROUP BY YEAR(DATE_TEMP)
ORDER BY YEAR(DATE_TEMP) ASC


--LEAST TEMP, HIGHEST TEMP, AVG TEMP IN FRANCE FOR EACH YEAR
SELECT MIN(MIN_TEMP) AS 'LOWEST_TEMP', MAX(MAX_TEMP) AS 'HIGHEST_TEMP', AVG(MEAN_TEMP), YEAR(DATE_TEMP)
FROM TEMPERATURES
INNER JOIN PROJET_DEP D
ON T.DEP_ID = D.codeD
GROUP BY YEAR(DATE_TEMP)
ORDER BY YEAR(DATE_TEMP) ASC



--JOINING THE TABLES IN THE BEST POSSIBLE WAY FOR ANALYSIS
SELECT SUM(MAX_TEMP), SUM(MEAN_TEMP), SUM(NUM_HOSP), DATE_TEMP, DATE_HOSP, H.DEP_ID AS 'DEP ID'
FROM TEMPERATURES T
RIGHT JOIN HOSPITALISATIONS H
    ON H.DEP_ID = T.DEP_ID AND H.DATE_HOSP = T.DATE_TEMP
WHERE SEX = 0 AND T.DEP_ID IS NOT NULL AND H.DATE_HOSP IS NOT NULL
GROUP BY DATE_TEMP
ORDER BY DATE_TEMP ASC